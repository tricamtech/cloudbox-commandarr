#!/bin/bash
helper(){
		while true; do
       echo "Please choose what you would like to do:"
        echo "i) List server information as shown on login (MOTD)"
				echo "m) Core Repo Installation - tag"
				echo "c) Community Repo Installation -tag"
				echo "a) List available tags to install"
        echo "b) Run a manual Cloudbox Backup"
				echo "d) Dedupe via plex_dupefinder"
				echo "u) Cloudplow upload"
        echo "l) View Cloudbox logs"
        echo "n) View Network info"
        echo "d) View Docker container logs (not implemmeted yet)"
        echo "s) Edit configuration files for Cloudbox"
				echo "e) Exit"
				read  -n 1 -p "Make a selection:" helperinput
				[[ -z $helperinput ]] && break
			echo $'\n'
				case $helperinput in
            i)
              cat /var/run/motd.dynamic
              ;;
						m)
							echo "Core Repo Installation Begining"
							echo "Which application would you like to install?"
							read -p "Enter Tag Name:" tag
							cd ~/cloudbox && sudo ansible-playbook cloudbox.yml --tags $tag
							;;
						c)
							echo "Community Repo Installation Begining"
							echo "Which application would you like to install?"
							read -p "Enter Tag Name:" tag
							cd ~/community && sudo ansible-playbook community.yml --tags $tag
							;;
						a)
							echo "All available cloudbox tags:"
              cd ~/cloudbox && sudo ansible-playbook cloudbox.yml --list-tags 2>&1 | grep "TASK TAGS" | cut -d":" -f2 | awk '{sub(/\[/, "")sub(/\]/, "")}1' | sed -e 's/,//g' | xargs -n 1 | sort -u
							;;
            b)
              echo "Cloudbox backup Beginning"
              cd ~/cloudbox && sudo ansible-playbook cloudbox.yml --tags backup
              ;;
						d)
							echo "plex_dupefinder Begining"
              plex_dupefinder
							;;
						u)
              echo "Cloudplow upload Begining in background. Log is at /opt/cloudplow/myupload.log"
							nohup cloudplow upload > /opt/cloudplow/myupload.log &
							;;
            l)
              echo "Cloudbox logs, Choose a Log to view:"
              echo "1) Previous Backups"
              echo "2) Curent Backup"
              echo "3) Plex Autoscan"
              echo "4) Cloudplow"
              echo "5) Rclone VFS"
              echo "6) Rclone Cache"
              echo "7) Plexdrive 4"
              echo "8) Plexdrive 5"
              echo "9) MergerFS"
              echo "10) UnionFS"
              echo "11) Lets Encrypt"
              echo "12) Comandarr cloudplow upload"
              read -p "Log:" log
                case $log in
                    1)
                    cat ~/logs/cloudbox_backup-<DATE>.log
                    ;;
                    2)
                    tail -F ~/logs/cloudbox_backup.log
                    ;;
                    3)
                    tail -F /opt/plex_autoscan/plex_autoscan.log
                    ;;
                    4)
                    tail -F /opt/cloudplow/cloudplow.log
                    ;;
                    5)
                    sudo journalctl -o cat -fu rclone_vfs.service
                    ;;
                    6)
                    sudo journalctl -o cat -fu rclone_cache.service
                    ;;
                    7)
                    sudo journalctl -o cat -fu plexdrive4.service
                    ;;
                    8)
                    sudo journalctl -o cat -fu plexdrive5.service
                    ;;
                    9)
                    sudo journalctl -o cat -fu mergerfs.service
                    ;;
                    10)
                    sudo journalctl -fu unionfs.service
                    ;;
                    11)
                    docker logs -f letsencrypt
                    ;;
                    12)
                    tail -F /opt/cloudplow/myupload.log
                    ;;
                  esac
              ;;
            n)
              echo "Network Info:"
              vnstat
              ;;
            s)
              echo "Cloudbox configuration, Choose a file to edit:"
              echo "1) Ansible Encrypted Accounts - accounts.yml"
              echo "1) Plaintext Accounts - accounts.yml"
              echo "3) General Settings - settings.yml"
              echo "4) Advanced Settings - adv_settings.yml"
              echo "5) Backup Settings - backup_config.yml"
              echo "6) Cloudplow Settings - cloudplow/config.json"
              echo "7) (Plex) Autoscan - plex_autoscan/config/config.json"
            #  echo "8) "
            #  echo "9) "
            #  echo "10) "
            #  echo "11) "
            #  echo "12) "
              read -p "Log:" log
                case $log in
                    1)
                    cd ~/cloudbox/ && ansible-vault edit accounts.yml
                    ;;
                    2)
                    cd ~/cloudbox/ && nano accounts.yml
                    ;;
                    3)
                    cd ~/cloudbox/ && nano settings.yml
                    ;;
                    4)
                    cd ~/cloudbox/ && nano adv_settings.yml
                    ;;
                    5)
                    cd ~/cloudbox && nano backup_config.yml
                    ;;
                    6)
                    nano /opt/cloudplow/config.json
                    ;;
                    7)
                    nano /opt/plex_autoscan/config/config.json
                    ;;
                #    8)
                #
                #    ;;
                #    9)
                #
                #    ;;
                #    10)
                #
                #    ;;
                #    11)
                #
                #    ;;
                #    12)
                #
                #    ;;
                  esac
              ;;
            e)
              echo "Goodbye!"
              exit
              ;;
						*)
							echo "Passed Variables= $helperinput $1 $2 $3"
							exit
							;;
					esac
			done
	}
cloudbox(){
	case $1 in
    i)
      cat /var/run/motd.dynamic
      ;;
		m)
			echo "Core Repo Installation Begining"
			cd ~/cloudbox && sudo ansible-playbook cloudbox.yml --tags $2
			;;
		c)
			echo "Community Repo Installation Begining"
			cd ~/community && sudo ansible-playbook community.yml --tags $2
			;;
    a)
      echo "All available cloudbox tags:"
      cd ~/cloudbox &&sudo ansible-playbook cloudbox.yml --list-tags 2>&1 | grep "TASK TAGS" | cut -d":" -f2 | awk '{sub(/\[/, "")sub(/\]/, "")}1' | sed -e 's/,//g' | xargs -n 1 | sort -u
      ;;
		d)
      echo "plex_dupefinder Begining"
      plex_dupefinder
			;;
		u)
      echo "Cloudplow upload Begining in background. Log is at /opt/cloudplow/myupload.log"
			nohup cloudplow upload > /opt/cloudplow/myupload.log &
			;;
		*)
			#echo Welcome to Cloudbox Commandarr.
      cat << "EOF"
      _________ .__                   .______.
      \_   ___ \|  |   ____  __ __  __| _/\_ |__   _______  ___
      /    \  \/|  |  /  _ \|  |  \/ __ |  | __ \ /  _ \  \/  /
      \     \___|  |_(  <_> )  |  / /_/ |  | \_\ (  <_> >    <
       \______  /____/\____/|____/\____ |  |___  /\____/__/\_ \
              \/                       \/      \/            \/
      _________                                           .___
      \_   ___ \  ____   _____   _____ _____    ____    __| _/____ ______________
      /    \  \/ /  _ \ /     \ /     \\__  \  /    \  / __ |\__  \\_  __ \_  __ \
      \     \___(  <_> )  Y Y  \  Y Y  \/ __ \|   |  \/ /_/ | / __ \|  | \/|  | \/
       \______  /\____/|__|_|  /__|_|  (____  /___|  /\____ |(____  /__|   |__|
              \/             \/      \/     \/     \/      \/     \/

#########################################################################
# Author:   TRiCAM                                                      #
# URL:      https://github.com/tricamtech/cloudbox-commandarr           #
# --                                                                    #
#         Made for the Cloudbox project: https://cloudbox.works         #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################


EOF

			helper
			;;
	esac

	}

## Call the main function
cloudbox $1 $2 $3

## Do after cloudbox():
echo "We have finished. Have a nice day!"
